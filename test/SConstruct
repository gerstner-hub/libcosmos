Import('env')

tests = env.GatherSources(suffixes=[".cxx"], recursive=False)

test_env = env.Clone()
test_env.ConfigureForLib('libcosmos')
run_env = test_env.Clone()
run_env.ConfigureRunForLib('libcosmos')

for test in tests:
    label = '.'.join(test.split('.')[:-1])
    test_prog_out = f"test_{label}"

    test_bin = test_env.Program(test_prog_out, [test])

    env.Alias("cosmos_tests", test_prog_out)

    run_test_key = f"run_cosmos_test_{label}"
    logfile = Dir(".").abspath + "/" + run_test_key + ".log"
    binary = test_bin[0].abspath
    test_action = run_env.Action(f"{binary} >{logfile} 2>&1 || (cat {logfile} && exit 1)")
    run_cmd = run_env.Command(f"{run_test_key}.command", test_bin, test_action)

    env.Alias(run_test_key, run_cmd)
    env.Alias("run_cosmos_tests", run_test_key)

# extra dependencies
coproc = test_env.Program("coproc", ["helpers/coproc.cxx"])
env.Requires("run_cosmos_test_subproc", coproc)

env.Alias("tests", "cosmos_tests")
env.Alias("run_tests", "run_cosmos_tests")
